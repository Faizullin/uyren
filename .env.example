# =============================================================================
# PROJECT CONFIGURATION - UYREN
# =============================================================================

# Global project settings
NGROK_AUTH_TOKEN=<your-ngrok-auth-token>

# ngrok Configuration for webhook testing
# Leave NGROK_DOMAIN empty for random domain, or set a custom domain if you have ngrok pro
NGROK_DOMAIN=
NGROK_WEB_PORT=4040

# =============================================================================
# DOCKER PORT CONFIGURATION
# =============================================================================

# Service Ports
BACKEND_PORT=8000
DB_PORT=5432
CODE_EXECUTION_PORT=8001
REDIS_PORT=6379

# =============================================================================
# DJANGO BACKEND CONFIGURATION
# =============================================================================

# Django Core Settings
SECRET_KEY=<your-secret-key-change-in-production>
DEBUG=True
DJANGO_SETTINGS_MODULE=config.settings.development
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,backend

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database Settings
POSTGRES_DB=uyren_dev
POSTGRES_USER=postgres
POSTGRES_PASSWORD=<your-postgres-password>
POSTGRES_HOST_AUTH_METHOD=trust

# Django Database URL (overrides individual settings)
DATABASE_URL=postgresql://postgres:<your-postgres-password>@db:5432/uyren_dev

# Database Connection Settings
DB_NAME=uyren_dev
DB_USER=postgres
DB_PASSWORD=<your-postgres-password>
DB_HOST=db
DB_PORT=5432

# =============================================================================
# DJANGO DEVELOPMENT CONFIGURATION
# =============================================================================

# Development Settings
DJANGO_LOG_LEVEL=INFO
DJANGO_SUPERUSER_USERNAME=admin
DJANGO_SUPERUSER_EMAIL=admin@example.com
DJANGO_SUPERUSER_PASSWORD=<your-admin-password>

# =============================================================================
# ENTRYPOINT SCRIPT CONFIGURATION
# =============================================================================

# Database Operations
RUN_MIGRATIONS=True
RUN_MAKEMIGRATIONS=True
RUN_COLLECTSTATIC=False
CREATE_SUPERUSER=False
LOAD_FIXTURES=False

# Wait for database
WAIT_FOR_DB=True

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis URL for backend (Celery) and code execution service
REDIS_URL=redis://redis:6379/0
CODE_EXECUTION_REDIS_URL=redis://redis:6379/1

# =============================================================================
# CODE EXECUTION SERVICE CONFIGURATION
# =============================================================================

# Third-party Code Execution API
CODE_EXECUTION_API_URL=https://onlinecompiler.io/api/v2/run-code/
CODE_EXECUTION_API_KEY=<your-code-execution-api-key>

# Code Execution Service Configuration
CODE_EXECUTION_HOST=0.0.0.0
CODE_EXECUTION_PORT=8001
CODE_EXECUTION_DEBUG=true

# Execution tracking TTL in seconds (1 hour = 3600)
EXECUTION_TTL=3600

# Security (for internal JWT if needed)
CODE_EXECUTION_SECRET_KEY=<your-secret-key-for-internal-jwt>
CODE_EXECUTION_ALGORITHM=HS256
CODE_EXECUTION_ACCESS_TOKEN_EXPIRE_MINUTES=30

# =============================================================================
# FIREBASE CONFIGURATION
# =============================================================================

# Firebase Service Account: Place 'service-account.json' files in respective service root folders
# - Backend: backend/service-account.json
# - Code Execution: code-execution-service/service-account.json
# No environment variables needed for Firebase configuration

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================

# Frontend Service URL (for CORS and callbacks)
FRONTEND_SERVICE_URL=http://localhost:3000

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

# Email Backend (console for development, smtp for production)
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

# SMTP Settings (for production)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=<your-email@example.com>
EMAIL_HOST_PASSWORD=<your-email-app-password>

# =============================================================================
# MEDIA & STATIC FILES
# =============================================================================

# Static Files
STATIC_URL=/static/
STATIC_ROOT=/app/staticfiles
MEDIA_URL=/media/
MEDIA_ROOT=/app/media

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# CORS Settings
CORS_ALLOW_ALL_ORIGINS=True
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# Security (set to True in production)
SECURE_SSL_REDIRECT=False
SECURE_HSTS_SECONDS=0
SECURE_HSTS_INCLUDE_SUBDOMAINS=False
SECURE_HSTS_PRELOAD=False
SECURE_CONTENT_TYPE_NOSNIFF=True
SECURE_BROWSER_XSS_FILTER=True

# =============================================================================
# AWS S3 CONFIGURATION (OPTIONAL)
# =============================================================================

# AWS S3 Configuration (if using django-storages)
AWS_ACCESS_KEY_ID=<your-aws-access-key>
AWS_SECRET_ACCESS_KEY=<your-aws-secret-key>
AWS_STORAGE_BUCKET_NAME=<your-bucket-name>
AWS_S3_REGION_NAME=us-east-1
USE_S3=False

# =============================================================================
# API CONFIGURATION
# =============================================================================

# API Settings
API_VERSION=v1
API_TITLE=Uyren API
API_DESCRIPTION=Uyren Backend API Documentation

# JWT Settings
JWT_ACCESS_TOKEN_LIFETIME_MINUTES=60
JWT_REFRESH_TOKEN_LIFETIME_DAYS=7