# =============================================================================
# DJANGO CONFIGURATION
# =============================================================================

# Django Core Settings
SECRET_KEY=your-secret-key-here-make-it-very-long-and-complex-change-in-production
DEBUG=True
DJANGO_SETTINGS_MODULE=config.settings.development
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,backend

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database Settings
POSTGRES_DB=uyren_dev
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres123
POSTGRES_HOST_AUTH_METHOD=trust

# Django Database URL (overrides individual settings)
DATABASE_URL=postgresql://postgres:postgres123@db:5432/uyren_dev

# Database Connection Settings
DB_NAME=uyren_dev
DB_USER=postgres
DB_PASSWORD=postgres123
DB_HOST=db
DB_PORT=5432

# =============================================================================
# DOCKER & DEVELOPMENT CONFIGURATION
# =============================================================================

# Docker Port Configuration
BACKEND_PORT=8000
DB_PORT=5432

# Development Settings
DJANGO_LOG_LEVEL=INFO
DJANGO_SUPERUSER_USERNAME=admin
DJANGO_SUPERUSER_EMAIL=admin@example.com
DJANGO_SUPERUSER_PASSWORD=admin.password@1234

# =============================================================================
# ENTRYPOINT SCRIPT CONFIGURATION
# =============================================================================

# Database Operations
RUN_MIGRATIONS=True
RUN_MAKEMIGRATIONS=False
RUN_COLLECTSTATIC=True
CREATE_SUPERUSER=True
LOAD_FIXTURES=False

# Wait for database
WAIT_FOR_DB=True

# =============================================================================
# FIREBASE CONFIGURATION
# =============================================================================

# Firebase Service Account: Place 'service-account.json' file in backend root folder
# No environment variables needed for Firebase configuration

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

# Email Backend (console for development, smtp for production)
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

# SMTP Settings (for production)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your-email@example.com
EMAIL_HOST_PASSWORD=your-email-app-password

# =============================================================================
# MEDIA & STATIC FILES
# =============================================================================

# Static Files
STATIC_URL=/static/
STATIC_ROOT=/app/staticfiles
MEDIA_URL=/media/
MEDIA_ROOT=/app/media

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# CORS Settings
CORS_ALLOW_ALL_ORIGINS=True
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# Security (set to True in production)
SECURE_SSL_REDIRECT=False
SECURE_HSTS_SECONDS=0
SECURE_HSTS_INCLUDE_SUBDOMAINS=False
SECURE_HSTS_PRELOAD=False
SECURE_CONTENT_TYPE_NOSNIFF=True
SECURE_BROWSER_XSS_FILTER=True

# =============================================================================
# OPTIONAL SERVICES
# =============================================================================

# Redis Configuration (if using Celery)
REDIS_URL=redis://redis:6379/0

# AWS S3 Configuration (if using django-storages)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_STORAGE_BUCKET_NAME=your-bucket-name
AWS_S3_REGION_NAME=us-east-1
USE_S3=False

# =============================================================================
# API CONFIGURATION
# =============================================================================

# API Settings
API_VERSION=v1
API_TITLE=Uyren API
API_DESCRIPTION=Uyren Backend API Documentation

# JWT Settings
JWT_ACCESS_TOKEN_LIFETIME_MINUTES=60
JWT_REFRESH_TOKEN_LIFETIME_DAYS=7
